recipe :ruby

Kicker::Recipes::Ruby.runner_bin = 'bacon'

process do |files|
  specs = files.take_and_map do |file|
    case file
    when %r{ext/xcodeproj/.+?\.(h|rb|c)$}
      execute 'rake ext:cleanbuild'
      'spec/xcodeproj_ext_spec.rb'
    when %r{lib/xcodeproj/(.+?)\.rb$}
      s = Dir.glob("spec/**#{$1}_spec.rb")
      puts
      s unless s.empty?
    end
  end
  Kicker::Recipes::Ruby.run_tests(specs)
end

# Have written this so many times, probably should make a recipe out of it.
process do |files|
  files.each do |file|
    case file
    when 'Gemfile'
      files.delete(file)
      execute 'bundle install'
    end
  end
end

recipe :ignore
ignore(/\..+?\.sw.$/)
ignore(/.*\/?tags/)
ignore(/.*\/?\.git/)

# Webserver front end

process do |files|
  files.each do |file|
    case file
    when /.*\.haml$/
      files.delete(file)
      execute "haml #{file} #{file.gsub(/\.haml$/,'.html')}"
      reloadChrome
    when /.*\.sass$/
      files.delete(file)
      execute "sass #{file} #{file.gsub(/\.sass$/,'.css')}"
      reloadChrome
    when /.*\.coffee$/
      files.delete(file)
      execute 'echo "loading coffee"'
      reloadChrome
    when /.*\.(js|css)$/
      files.delete(file)
    end
  end
end

def reloadChrome
  script =  <<-__ASCPT__
    tell application "Google Chrome" to tell the first tab of its first window
      reload
    end tell
  __ASCPT__

  `osascript -e '#{script}'`
end

